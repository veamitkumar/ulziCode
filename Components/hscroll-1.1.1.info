{"Name":"Horizontal Scroll Layout","Id":2286,"Alias":"hscroll","Description":"# HorizontalScrollLayout details\r\nThis component implements an horizontal scroll layout to be used within Xamarin.Forms applications.\r\nIt supports Forms as well as XAML pages.\r\nThe component implements DataTemplate and data binding of any type, allowing any kind of rendering.\r\nThis component works fine in Android, iOS and WindowsPhone plaforms.\r\n","Version":"1.1.1","Summary":"Horizontal scroll layout with binded template and data","QuickStart":"# Getting Started with HorizontalScrollLayout\r\nDisplaying the HorizontalScrollLayout is really simple:\r\n\r\nDefine the data structure to use within the component:\r\n\u003cpre\u003e\u003ccode class=\"csharp\"\u003e\r\n    public class HScrollViewCell1Data\r\n    {\r\n        public int id {get; set;}\r\n        public string name { get; set; }\r\n        public bool shortSelectionTime { get; set; }\r\n    }\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\nDesign your ContentView which will be displayed in the HorizontalScrollLayout component.\r\n\u003cpre\u003e\u003ccode class=\"csharp\"\u003e\r\n  public class HScrollViewCell1 : ContentView\r\n    {\r\n\r\n        protected HScrollViewCell1Data bindedData;\r\n        public object BindedData\r\n        {\r\n            get\r\n            {\r\n                return this.bindedData;\r\n            }\r\n            set\r\n            {\r\n                this.bindedData = (HScrollViewCell1Data)value;\r\n            }\r\n        }\r\n\r\n        public HScrollViewCell1()\r\n        {\r\n\r\n            this.BackgroundColor = Color.Transparent;\r\n            this.Padding = 10;\r\n            Label iconLabel = new Label\r\n            {\r\n                VerticalOptions = LayoutOptions.End,\r\n                HorizontalOptions = LayoutOptions.Center,\r\n                \r\n                FontSize = Device.OnPlatform(\r\n                    Device.GetNamedSize(NamedSize.Micro, typeof(Label)),\r\n                    Device.GetNamedSize(NamedSize.Micro, typeof(Label)),\r\n                    Device.GetNamedSize(NamedSize.Micro, typeof(Label))\r\n                ),\r\n                \r\n                BackgroundColor = Color.Transparent\r\n            };\r\n            iconLabel.SetBinding(Label.TextProperty, \"name\");\r\n\r\n            var viewLayout = new StackLayout()\r\n            {\r\n                Orientation = StackOrientation.Vertical,\r\n                Children = { iconLabel },\r\n                BackgroundColor = Color.Transparent\r\n            };\r\n\r\n            Content = viewLayout;\r\n\r\n        }\r\n\r\n    }\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\nIn your page, add the HorizontalScrollLayout control:\r\n\u003cpre\u003e\u003ccode class=\"csharp\"\u003e\r\n \r\n\tvar dataHScroll1 = new HScrollViewCell1Data[] {\r\n        new HScrollViewCell1Data { id = 1, name = \"Item 1\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 2, name = \"Item 2\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 3, name = \"Item 3\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 4, name = \"Item 4\", shortSelectionTime = true},\r\n        new HScrollViewCell1Data { id = 5, name = \"Item 5\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 6, name = \"Item 6\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 7, name = \"Item 7\", shortSelectionTime = true},\r\n        new HScrollViewCell1Data { id = 8, name = \"Item 8\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 9, name = \"Item 9\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 10, name = \"Item 10\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 11, name = \"Item 11\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 12, name = \"Item 12\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 13, name = \"Item 13\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 14, name = \"Item 14\", shortSelectionTime = true},\r\n        new HScrollViewCell1Data { id = 15, name = \"Item 15\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 16, name = \"Item 16\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 17, name = \"Item 17\", shortSelectionTime = true},\r\n        new HScrollViewCell1Data { id = 18, name = \"Item 18\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 19, name = \"Item 19\", shortSelectionTime = false},\r\n        new HScrollViewCell1Data { id = 20, name = \"Item 20\", shortSelectionTime = false}\r\n    };\r\n    this.hscroll1 = new HorizontalScrollLayout\r\n    {\r\n\t\tItemSource = dataHScroll1, \r\n        ItemTemplate = new DataTemplate(typeof(HScrollViewCell1)),\r\n        HeightRequest = 35,\r\n        SelectionBackGroundColor = Color.Fuchsia,\r\n        MultiSelection = false\r\n    };\r\n\t// Ading event handler when items are tapped\r\n    this.hscroll1.ItemSelected += hscroll1And2_ItemSelected;\r\n    this.hscroll1.ItemUnSelected += hscroll1And2_ItemUnSelected;\t\r\n\t\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\nAnd manage events:\r\n\u003cpre\u003e\u003ccode class=\"csharp\"\u003e\r\n\tasync void hscroll1And2_ItemSelected(object sender, HScrollEventArgs e)\r\n\t{\r\n\t\tHorizontalScrollLayout layout = (HorizontalScrollLayout)sender;\r\n\t\tHScrollViewCell1Data record = (HScrollViewCell1Data)e.Data;\r\n\t\tif (record.shortSelectionTime)\r\n\t\t{\r\n\t\t\tawait Task.Delay(250);\r\n\t\t\tlayout.UnselectItem(record);\r\n\t\t}\r\n\r\n\t}\r\n\u003c/code\u003e\u003c/pre\u003e\r\n","Hash":"3be8a3668f080966906bd26f1af0f02d","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}